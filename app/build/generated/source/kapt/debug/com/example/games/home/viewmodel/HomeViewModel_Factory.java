// Generated by Dagger (https://dagger.dev).
package com.example.games.home.viewmodel;

import com.example.core.use_case.GamesUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HomeViewModel_Factory implements Factory<HomeViewModel> {
  private final Provider<GamesUseCase> useCaseProvider;

  public HomeViewModel_Factory(Provider<GamesUseCase> useCaseProvider) {
    this.useCaseProvider = useCaseProvider;
  }

  @Override
  public HomeViewModel get() {
    return newInstance(useCaseProvider.get());
  }

  public static HomeViewModel_Factory create(Provider<GamesUseCase> useCaseProvider) {
    return new HomeViewModel_Factory(useCaseProvider);
  }

  public static HomeViewModel newInstance(GamesUseCase useCase) {
    return new HomeViewModel(useCase);
  }
}
