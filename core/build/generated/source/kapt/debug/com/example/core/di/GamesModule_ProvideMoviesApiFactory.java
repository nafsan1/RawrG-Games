// Generated by Dagger (https://dagger.dev).
package com.example.core.di;

import com.example.core.network.service.ApiServices;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GamesModule_ProvideMoviesApiFactory implements Factory<ApiServices> {
  private final Provider<OkHttpClient> clientProvider;

  public GamesModule_ProvideMoviesApiFactory(Provider<OkHttpClient> clientProvider) {
    this.clientProvider = clientProvider;
  }

  @Override
  public ApiServices get() {
    return provideMoviesApi(clientProvider.get());
  }

  public static GamesModule_ProvideMoviesApiFactory create(Provider<OkHttpClient> clientProvider) {
    return new GamesModule_ProvideMoviesApiFactory(clientProvider);
  }

  public static ApiServices provideMoviesApi(OkHttpClient client) {
    return Preconditions.checkNotNullFromProvides(GamesModule.INSTANCE.provideMoviesApi(client));
  }
}
