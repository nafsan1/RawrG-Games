// Generated by Dagger (https://dagger.dev).
package com.example.core.di;

import android.app.Application;
import com.example.core.local.GamesDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GamesModule_ProvideTrackerDatabaseFactory implements Factory<GamesDatabase> {
  private final Provider<Application> appProvider;

  public GamesModule_ProvideTrackerDatabaseFactory(Provider<Application> appProvider) {
    this.appProvider = appProvider;
  }

  @Override
  public GamesDatabase get() {
    return provideTrackerDatabase(appProvider.get());
  }

  public static GamesModule_ProvideTrackerDatabaseFactory create(
      Provider<Application> appProvider) {
    return new GamesModule_ProvideTrackerDatabaseFactory(appProvider);
  }

  public static GamesDatabase provideTrackerDatabase(Application app) {
    return Preconditions.checkNotNullFromProvides(GamesModule.INSTANCE.provideTrackerDatabase(app));
  }
}
